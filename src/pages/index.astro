---
import Layout from '../layouts/Layout.astro';
---

<Layout title="吃角子老虎抽獎機">
	<main class="w-full">
		<h1 class="text-gradient">抽獎</h1>
		<div class="flex flex-auto gap-8">
			<div class="w-1/3">
				<label for="name">名單：</label><br>
				<textarea class="bg-white text-gray-800 w-full p-4" name="name" id="" cols="30" rows="10"></textarea><br>
				<button class="draw border-2 py-2 px-4 rounded">抽獎</button>
			</div>		
			<div class="w-2/3">	
				<div class="result h-full w-full flex-auto justify-center items-center flex text-4xl text-center"></div>
			</div>
		</div>
	</main>
</Layout>
<script>
	let nameSouce = document.querySelector('textarea[name="name"]');
	let drawBtn = document.querySelector('.draw');

	drawBtn?.addEventListener('click', () => {
		let nameSouce = document.querySelector('textarea[name="name"]') as HTMLTextAreaElement;
		let names: string[] = nameSouce?.value.split('\n') || [];
		let random = Math.floor(Math.random() * names.length);
		let count=1;
		names.forEach(name => {
			count++;
			setTimeout(() => {
				const resultElement = document.querySelector('.result');
				if (resultElement) {
					resultElement.innerHTML = `${name}`;
				}
			}, 100*count);
		});
		setTimeout(() => {
			const resultElement = document.querySelector('.result');
			if (resultElement) {
				resultElement.innerHTML = `得獎的是：${names[random]}`;
			}
		},100*names.length+100);
	});
</script>
<style>
	main {
		margin: auto;
		padding: 1rem;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
	gap: 2rem;
	padding: 0;
}
</style>
