---
import Layout from '../layouts/Layout.astro';
---

<Layout title="吃角子老虎抽獎機">
	<main>
		<h1 class="text-gradient">抽獎</h1>
		<div class="flex">
			<div>
				<label for="name">名單：</label>
				<textarea class="bg-white text-gray-800" name="name" id="" cols="30" rows="10">
老王
小明
大寶
二寶
小美
				</textarea>
				<button class="draw">抽獎</button>
			</div>		
			<div>	
				<p class="result">抽獎結果：</p>
			</div>
		</div>
	</main>
</Layout>
<script>

	
		let drawButton = document.querySelector('.draw');
		let result = document.querySelector('.result');
		drawButton?.addEventListener('click', () => {
			let names = document.querySelector('textarea[name="name"]').value.split('\n');
			let winner = names[Math.floor(Math.random() * names.length)];
			result.innerHTML = winner;

			// 捲動效果
			let scrollHeight = result.scrollHeight;
			let animationDuration = 3000; // 捲動時間，單位為毫秒
			let scrollStep = Math.PI / (animationDuration / 15); // 每個時間間隔的捲動距離
			let count = 0;
			let scrollInterval = setInterval(() => {
				if (count >= scrollHeight) {
					clearInterval(scrollInterval);
				}
				result.scrollTop = Math.round(scrollHeight / 2 * (1 - Math.cos(count)));
				count += scrollStep;
			}, 15);
			setTimeout(() => {
				result.innerHTML = `得獎名單：${winner}`;
			}, 3000);
		});
	</script>
	<style>
		main {
			margin: auto;
			padding: 1rem;
			width: 800px;
			max-width: calc(100% - 2rem);
			color: white;
			font-size: 20px;
			line-height: 1.6;
		}
		.astro-a {
			position: absolute;
			top: -32px;
			left: 50%;
			transform: translatex(-50%);
			width: 220px;
			height: auto;
			z-index: -1;
		}
		h1 {
			font-size: 4rem;
			font-weight: 700;
			line-height: 1;
			text-align: center;
			margin-bottom: 1em;
		}
		.text-gradient {
			background-image: var(--accent-gradient);
			-webkit-background-clip: text;
			-webkit-text-fill-color: transparent;
			background-size: 400%;
			background-position: 0%;
		}
		.instructions {
			margin-bottom: 2rem;
			border: 1px solid rgba(var(--accent-light), 25%);
			background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
			padding: 1.5rem;
			border-radius: 8px;
		}
		.instructions code {
			font-size: 0.8em;
			font-weight: bold;
			background: rgba(var(--accent-light), 12%);
			color: rgb(var(--accent-light));
			border-radius: 4px;
			padding: 0.3em 0.4em;
		}
		.instructions strong {
			color: rgb(var(--accent-light));
		}
		.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
